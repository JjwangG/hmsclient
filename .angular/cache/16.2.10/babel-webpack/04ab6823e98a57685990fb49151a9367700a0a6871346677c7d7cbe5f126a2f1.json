{"ast":null,"code":"import { Role, UserModel } from '../model/user-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst Url = 'http://localhost:8080/hms-test/';\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.users = [new UserModel(1, 1, 'urmom', 'bitch', 'whore', 'bitchwhore@email.com', new Role('slut', 70)), new UserModel(2, 2, 'password', 'john', 'dumb', 'email@email.com', new Role('bruh', 60))];\n  }\n  getUser(id) {\n    var x = this.http.get(Url + 'useraccounts/' + id);\n    console.log(x);\n    return x;\n  }\n  addUser(book) {\n    return this.http.post(Url + 'adduser', book);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Role","UserModel","Url","UserService","constructor","http","users","getUser","id","x","get","console","log","addUser","book","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mlpui\\OneDrive\\Documents\\YEAR 5\\SEG\\hmsclient\\src\\app\\user\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {Role, UserModel} from '../model/user-model';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, map } from 'rxjs';\r\n\r\nconst Url = 'http://localhost:8080/hms-test/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient){}\r\n\r\n  private users = [\r\n    new UserModel(1, 1, 'urmom', 'bitch', 'whore', 'bitchwhore@email.com', new Role('slut',70)),\r\n    new UserModel(2, 2, 'password', 'john', 'dumb', 'email@email.com', new Role('bruh',60))\r\n  ];\r\n\r\n  public getUser(id: string): Observable<UserModel> {\r\n    var x = this.http.get<UserModel>(Url + 'useraccounts/' + id);\r\n    console.log(x);\r\n    return x;\r\n  }\r\n\r\n  public addUser(book: UserModel): Observable<UserModel> {\r\n    return this.http.post<UserModel>(Url + 'adduser', book);\r\n  }\r\n\r\n\r\n  // public getUser(id: string): UserModel {\r\n  //   // tslint:disable-next-line:radix\r\n  //   return <UserModel>this.users.find(user => user.id === Number.parseInt(id));\r\n  // }\r\n\r\n  // public addBook(b: UserModel): void {\r\n  //   this.users.push(b);\r\n  // }\r\n}"],"mappings":"AACA,SAAQA,IAAI,EAAEC,SAAS,QAAO,qBAAqB;;;AAInD,MAAMC,GAAG,GAAG,iCAAiC;AAK7C,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,KAAK,GAAG,CACd,IAAIL,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,sBAAsB,EAAE,IAAID,IAAI,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC,EAC3F,IAAIC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,iBAAiB,EAAE,IAAID,IAAI,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC,CACxF;EALqC;EAO/BO,OAAOA,CAACC,EAAU;IACvB,IAAIC,CAAC,GAAG,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAYR,GAAG,GAAG,eAAe,GAAGM,EAAE,CAAC;IAC5DG,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;IACd,OAAOA,CAAC;EACV;EAEOI,OAAOA,CAACC,IAAe;IAC5B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAYb,GAAG,GAAG,SAAS,EAAEY,IAAI,CAAC;EACzD;EAAC,QAAAE,CAAA,G;qBAhBUb,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}