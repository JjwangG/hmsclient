{"ast":null,"code":"import { Role, UserModel } from '../user/model/user-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user/service/user.service\";\nimport * as i3 from \"@angular/common\";\nfunction categoryValidator(control) {\n  const validCategories = ['Kids', 'Tech', 'Cook'];\n  if (!validCategories.includes(control.value)) {\n    return {\n      invalidCategory: true\n    };\n  }\n  return null;\n}\nexport class AdminComponent {\n  get id() {\n    return this.userForm.get('id');\n  }\n  get employeenum() {\n    return this.userForm.get('employeenum');\n  }\n  get password() {\n    return this.userForm.get('password');\n  }\n  get firstname() {\n    return this.userForm.get('firstname');\n  }\n  get lastname() {\n    return this.userForm.get('lastname');\n  }\n  get email() {\n    return this.userForm.get('email');\n  }\n  get role() {\n    return this.userForm.get('role');\n  }\n  constructor(builder, userService) {\n    this.builder = builder;\n    this.userService = userService;\n    this.message = '';\n    this.hideMsg = true;\n    this.msgStyle = {\n      color: '',\n      'background-color': 'white',\n      'font-size': '150%'\n    };\n    this.userForm = this.builder.group({\n      id: [''],\n      employeenum: [''],\n      password: [''],\n      firstname: [''],\n      lastname: [''],\n      email: [''],\n      role: ['']\n    });\n  }\n  ngOnInit() {}\n  showMessage(type, msg) {\n    this.msgStyle.color = type === 'error' ? 'red' : 'blue';\n    this.message = msg;\n    this.hideMsg = false;\n    setTimeout(() => {\n      this.hideMsg = true;\n    }, 3000);\n  }\n  onSubmit() {\n    const book = new UserModel(Number(this.userForm.value.id), Number(this.userForm.value.employeenum), this.userForm.value.password, this.userForm.value.firstname, this.userForm.value.lastname, this.userForm.value.email, new Role('nurse', 0));\n    this.userService.addUser(book).subscribe({\n      error: _ => {\n        this.showMessage('error', 'Unable to add the user');\n      }\n    });\n    this.userForm.reset();\n  }\n  static #_ = this.ɵfac = function AdminComponent_Factory(t) {\n    return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminComponent,\n    selectors: [[\"app-admin\"]],\n    decls: 28,\n    vars: 5,\n    consts: [[1, \"container\"], [3, \"ngStyle\", \"hidden\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"id\"], [\"type\", \"text\", \"id\", \"id\", \"formControlName\", \"id\", 1, \"form-control\"], [\"for\", \"employeenum\"], [\"type\", \"text\", \"id\", \"employeenum\", \"required\", \"\", \"formControlName\", \"employeenum\", 1, \"form-control\"], [\"for\", \"firstname\"], [\"type\", \"text\", \"id\", \"firstname\", \"required\", \"\", \"pattern\", \"\\\\d+(.\\\\d{1,2})?\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"for\", \"lastname\"], [\"type\", \"text\", \"id\", \"lastname\", \"formControlName\", \"lastname\", 1, \"form-control\"], [\"for\", \"role\"], [\"cols\", \"40\", \"id\", \"role\", \"formControlName\", \"role\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n    template: function AdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"User Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"id:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"employee num:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 8);\n        i0.ɵɵtext(16, \"first name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 10);\n        i0.ɵɵtext(20, \"last name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 12);\n        i0.ɵɵtext(24, \"role:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"textarea\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 14);\n        i0.ɵɵtext(27, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", ctx.msgStyle)(\"hidden\", ctx.hideMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.message, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      }\n    },\n    dependencies: [i3.NgStyle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.PatternValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Role","UserModel","categoryValidator","control","validCategories","includes","value","invalidCategory","AdminComponent","id","userForm","get","employeenum","password","firstname","lastname","email","role","constructor","builder","userService","message","hideMsg","msgStyle","color","group","ngOnInit","showMessage","type","msg","setTimeout","onSubmit","book","Number","addUser","subscribe","error","_","reset","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","_2","selectors","decls","vars","consts","template","AdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AdminComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","invalid"],"sources":["C:\\Users\\mlpui\\OneDrive\\Documents\\YEAR 5\\SEG\\hmsclient\\src\\app\\admin\\admin.component.ts","C:\\Users\\mlpui\\OneDrive\\Documents\\YEAR 5\\SEG\\hmsclient\\src\\app\\admin\\admin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormControl, Validators} from '@angular/forms';\r\nimport { Role, UserModel } from '../user/model/user-model';\r\nimport { UserService } from '../user/service/user.service';\r\n\r\nfunction categoryValidator(control: FormControl<string>): { [s: string]: boolean } | null {\r\n  const validCategories = ['Kids', 'Tech', 'Cook'];\r\n  if (!validCategories.includes(control.value)) {\r\n    return {invalidCategory: true};\r\n  }\r\n  return null;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  message: string = '';\r\n  hideMsg = true;\r\n  msgStyle = {\r\n    color: '',\r\n    'background-color': 'white',\r\n    'font-size': '150%',\r\n  };\r\n\r\n  userForm = this.builder.group({\r\n    id: [''],\r\n    employeenum: [''],\r\n    password: [''],\r\n    firstname: [''],\r\n    lastname: [''],\r\n    email: [''],\r\n    role: [''],\r\n  });\r\n\r\n  get id(): AbstractControl {\r\n    return <AbstractControl>this.userForm.get('id');\r\n  }\r\n\r\n  get employeenum(): AbstractControl {\r\n    return <AbstractControl>this.userForm.get('employeenum');\r\n  }\r\n\r\n  get password(): AbstractControl {\r\n    return <AbstractControl>this.userForm.get('password');\r\n  }\r\n\r\n  get firstname(): AbstractControl {\r\n    return <AbstractControl>this.userForm.get('firstname');\r\n  }\r\n\r\n  get lastname(): AbstractControl {\r\n    return <AbstractControl>this.userForm.get('lastname');\r\n  }\r\n\r\n  get email(): AbstractControl {\r\n    return <AbstractControl>this.userForm.get('email');\r\n  }\r\n\r\n  get role(): AbstractControl {\r\n    return <AbstractControl>this.userForm.get('role');\r\n  }\r\n\r\n  constructor(private builder: FormBuilder,\r\n              private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  showMessage(type: string, msg: string): void {\r\n    this.msgStyle.color = type === 'error' ? 'red' : 'blue';\r\n    this.message = msg;\r\n    this.hideMsg = false;\r\n    setTimeout(\r\n      () => {\r\n        this.hideMsg = true;\r\n      }, 3000\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const book = new UserModel(\r\n      Number(this.userForm.value.id), \r\n      Number(this.userForm.value.employeenum),\r\n      <string>this.userForm.value.password,\r\n      <string>this.userForm.value.firstname,\r\n      <string>this.userForm.value.lastname,\r\n      <string>this.userForm.value.email,\r\n      new Role('nurse', 0));\r\n    this.userService.addUser(book).subscribe({\r\n      error: (_: any) => {\r\n        this.showMessage('error', 'Unable to add the user');\r\n      }\r\n    });\r\n    this.userForm.reset();\r\n  }\r\n}","<div class=\"container\">\r\n    <div [ngStyle]=\"msgStyle\" [hidden]=\"hideMsg\">\r\n      {{message}}\r\n    </div>\r\n    <h1>User Form</h1>\r\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"id\">id:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"id\" formControlName=\"id\">\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"employeenum\">employee num:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"employeenum\" required formControlName=\"employeenum\">\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"firstname\">first name:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"firstname\" required pattern=\"\\d+(.\\d{1,2})?\" formControlName=\"firstname\">\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"lastname\">last name:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"lastname\" formControlName=\"lastname\">\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"role\">role:</label>\r\n        <textarea cols=\"40\" class=\"form-control\" id=\"role\" formControlName=\"role\"></textarea>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"userForm.invalid\">Submit</button>\r\n    </form>\r\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}