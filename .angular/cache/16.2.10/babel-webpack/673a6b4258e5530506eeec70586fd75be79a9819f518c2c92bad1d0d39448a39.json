{"ast":null,"code":"import { Role, UserModel } from '../user/model/user-model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user/service/user.service\";\nimport * as i3 from \"@angular/common\";\nfunction categoryValidator(control) {\n  const validCategories = ['Kids', 'Tech', 'Cook'];\n  if (!validCategories.includes(control.value)) {\n    return {\n      invalidCategory: true\n    };\n  }\n  return null;\n}\nexport let AdminComponent = /*#__PURE__*/(() => {\n  class AdminComponent {\n    get id() {\n      return this.userForm.get('id');\n    }\n    get employeenum() {\n      return this.userForm.get('employeenum');\n    }\n    get password() {\n      return this.userForm.get('password');\n    }\n    get firstname() {\n      return this.userForm.get('firstname');\n    }\n    get lastname() {\n      return this.userForm.get('lastname');\n    }\n    get email() {\n      return this.userForm.get('email');\n    }\n    get role() {\n      return this.userForm.get('role');\n    }\n    constructor(builder, userService) {\n      this.builder = builder;\n      this.userService = userService;\n      this.message = '';\n      this.hideMsg = true;\n      this.msgStyle = {\n        color: '',\n        'background-color': 'white',\n        'font-size': '150%'\n      };\n      this.userForm = this.builder.group({\n        id: [''],\n        employeenum: [''],\n        password: [''],\n        firstname: [''],\n        lastname: [''],\n        email: [''],\n        role: ['']\n      });\n    }\n    ngOnInit() {}\n    showMessage(type, msg) {\n      this.msgStyle.color = type === 'error' ? 'red' : 'blue';\n      this.message = msg;\n      this.hideMsg = false;\n      setTimeout(() => {\n        this.hideMsg = true;\n      }, 3000);\n    }\n    onSubmit() {\n      const book = new UserModel(Number(this.userForm.value.id), Number(this.userForm.value.employeenum), this.userForm.value.password, this.userForm.value.firstname, this.userForm.value.lastname, this.userForm.value.email, new Role('nurse', 0));\n      this.userService.addUser(book).subscribe({\n        error: _ => {\n          this.showMessage('error', 'Unable to add the user');\n        }\n      });\n      this.userForm.reset();\n    }\n    static #_ = this.ɵfac = function AdminComponent_Factory(t) {\n      return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminComponent,\n      selectors: [[\"app-admin\"]],\n      decls: 28,\n      vars: 5,\n      consts: [[1, \"container\"], [3, \"ngStyle\", \"hidden\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"id\"], [\"type\", \"text\", \"id\", \"id\", \"formControlName\", \"id\", 1, \"form-control\"], [\"for\", \"employeenum\"], [\"type\", \"text\", \"id\", \"employeenum\", \"required\", \"\", \"formControlName\", \"employeenum\", 1, \"form-control\"], [\"for\", \"firstname\"], [\"type\", \"text\", \"id\", \"firstname\", \"required\", \"\", \"pattern\", \"\\\\d+(.\\\\d{1,2})?\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"for\", \"lastname\"], [\"type\", \"text\", \"id\", \"lastname\", \"formControlName\", \"lastname\", 1, \"form-control\"], [\"for\", \"role\"], [\"cols\", \"40\", \"id\", \"role\", \"formControlName\", \"role\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n      template: function AdminComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"h1\");\n          i0.ɵɵtext(4, \"User Form\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function AdminComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n          i0.ɵɵtext(8, \"id:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 6);\n          i0.ɵɵtext(12, \"employee num:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 8);\n          i0.ɵɵtext(16, \"first name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\", 10);\n          i0.ɵɵtext(20, \"last name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 12);\n          i0.ɵɵtext(24, \"role:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"textarea\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 14);\n          i0.ɵɵtext(27, \"Submit\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngStyle\", ctx.msgStyle)(\"hidden\", ctx.hideMsg);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.message, \" \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n          i0.ɵɵadvance(21);\n          i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n        }\n      },\n      dependencies: [i3.NgStyle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.PatternValidator, i1.FormGroupDirective, i1.FormControlName]\n    });\n  }\n  return AdminComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}